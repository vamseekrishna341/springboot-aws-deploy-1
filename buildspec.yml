version: 0.2
phases:
  install:
    commands:
      - echo "Installing dependencies..."
      - mvn --version
      - echo "Done installing dependencies."
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR...."
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 712884342706.dkr.ecr.ap-south-1.amazonaws.com
      - REPOSITORY_URI=712884342706.dkr.ecr.ap-south-1.amazonaws.com/aapooncontactssecuredrepo-qa
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo "Build started on `date`"
      - echo "Building the Jar file with Maven..."
      - mvn clean install || exit 1 # Exit if Maven build fails
      - echo "Maven build completed. Checking target folder for JAR..."
      - ls target/ # Check if JAR file is present
      - echo "Building the Docker image..."
      - docker build -t $REPOSITORY_URI:latest . || exit 1 # Exit if Docker build fails
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo "Build completed on `date`"
      - echo "Pushing Docker images to ECR..."
      - docker push $REPOSITORY_URI:latest || exit 1 # Exit if Docker push fails
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Writing image definitions file..."
      - DOCKER_CONTAINER_NAME=aapooncontactssecuredrepo-qa
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo "imagedefinitions.json content:"
      - cat imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
    - target/springboot-aws-deploy.jar
  discard-paths: yes
